@page "/Employee"
@inherits RazorPageBases.EmployeePageBase;
@attribute [Authorize(Roles = "Employee")]


@if (currentEmployee == null)
{
	<p>Loading...</p>
}
else
{
<MudGrid Justify="Justify.FlexStart" Style="margin-bottom:30px;">
	<MudItem xs=6>
		<MudAvatar Size="Size.Large" Style="width:150px;height:150px; margin-bottom:30px;" Color="Color.Primary">@currentEmployee.FirstName.Substring(0, 1)@currentEmployee.LastName.Substring(0, 1)</MudAvatar>
		<h3>@currentEmployee.FirstName @currentEmployee.LastName</h3>
	</MudItem>
	<MudItem xs=6>
		<MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OpenAddVacationDialogAsync" StartIcon="@Icons.Material.Filled.Add">Add Vacation</MudButton>
		<MudButton Variant="Variant.Filled" Color="Color.Dark" OnClick="OpenEmployeeHistoryPage" StartIcon="@Icons.Material.Filled.List">History</MudButton>
	</MudItem>
</MudGrid>
<MudGrid Justify="Justify.FlexStart" Style="margin-bottom:30px;">
	<MudItem>
		<MudText>Remaining vacation for last year: @currentEmployee.RemainingDaysOffLastYear</MudText>
		<MudText>Remaining vacation for current year: @currentEmployee.RemainingDaysOffCurrentYear</MudText>
	</MudItem>
</MudGrid>
@if(isCurrentUserOnVacation() == true)
{
<MudGrid Justify="Justify.Center" Style="margin-bottom:10px;">
	<MudItem>
		<MudText Style="color:red;" Typo="Typo.h4">You are on vacation.</MudText>
	</MudItem>
</MudGrid>
}

<MudGrid Justify="Justify.FlexStart" Style="margin-bottom:30px;">
	<MudItem xs=3>
		<MudSelect T="string" @bind-Value="vacationOrSickLeave" Label="Select" AnchorOrigin="Origin.BottomCenter">
		<MudSelectItem Value="@("Vacation")"/>
		<MudSelectItem Value="@("Sick Leave")"/>
</MudSelect>
	</MudItem>
</MudGrid>

@if (vacationOrSickLeave == "Sick Leave")
{
		<MudTable Items="@currentEmployee.SickLeave" Hover=true SortLabel="Sort By" Filter="new Func<SickLeave,bool>(FilterSickLeaveDelegate)">
		<ToolBarContent>
			<MudText Typo="Typo.h6">Sick Leave</MudText>
			<MudSpacer />
			<MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
		</ToolBarContent>
		<NoRecordsContent>
			No records found.
		</NoRecordsContent>
		<HeaderContent>
			<MudTh>Last Name</MudTh>
			<MudTh>First Name</MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<SickLeave, object>(x=>x.SickLeaveFrom)">Sick Leave From</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<SickLeave, object>(x=>x.SickLeaveTo)">Sick Leave To</MudTableSortLabel></MudTh>
			<MudTh></MudTh>
			<MudTh></MudTh>
		</HeaderContent>
		<RowTemplate>
			<MudTd DataLabel="Last Name">@context.User.LastName</MudTd>
			<MudTd DataLabel="First Name">@context.User.FirstName</MudTd>
			<MudTd DataLabel="Sick Leave From">@context.SickLeaveFrom.ToString("dd.MM.yyyy")</MudTd>
			<MudTd DataLabel="Sick Leave To">@context.SickLeaveTo</MudTd>
			<MudTd>
				<MudButton ButtonType="ButtonType.Button" OnClick="() => OpenMedicalCertificatePage(context.Id)" StartIcon="@Icons.Material.Filled.List" Style="color:deepskyblue">Med. Cert.</MudButton>
			</MudTd>
			@if(context.SickLeaveStatus == SickLeaveStatus.Opened)
			{
				<MudTd>
						<MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Done" OnClick="() => CloseSickLeave(context)">Close</MudButton>
				</MudTd>
			}
			else
			{
				<MudTd DataLabel="Sick Leave Status">Closed</MudTd>
			}
		</RowTemplate>
		<PagerContent>
			<MudTablePager />
		</PagerContent>
	</MudTable>
}
else
{
	<MudTable Items="@approvedAndPendingVacationRequests" Hover=true SortLabel="Sort By" Filter="new Func<Vacation,bool>(FilterFunction)" @bind-SelectedItem="selectedVacation">
		<ToolBarContent>
			<MudText Typo="Typo.h6">Vacation requests</MudText>
			<MudSpacer />
			<MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
		</ToolBarContent>
		<NoRecordsContent>
			No records found.
		</NoRecordsContent>
		<HeaderContent>
			<MudTh>Last Name</MudTh>
			<MudTh>First Name</MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<Vacation, object>(x=>x.VacationRequestDate)">Vacation Request Date</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<Vacation, object>(x=>x.VacationFrom)">Vacation From</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<Vacation, object>(x=>x.VacationTo)">Vacation To</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<Vacation, object>(x=>x.VacationSpent)">Vacation Spent</MudTableSortLabel></MudTh>
			<MudTh>Vacation Status</MudTh>
			<MudTh></MudTh>
		</HeaderContent>
		<RowTemplate>
			<MudTd DataLabel="Last Name">@context.User.LastName</MudTd>
			<MudTd DataLabel="First Name">@context.User.FirstName</MudTd>
			<MudTd DataLabel="Vacation Request Date">@context.VacationRequestDate</MudTd>
			<MudTd DataLabel="Vacation From">@context.VacationFrom.ToString("dd.MM.yyyy")</MudTd>
			<MudTd DataLabel="Vacation To">@context.VacationTo.ToString("dd.MM.yyyy")</MudTd>
			<MudTd DataLabel="Total Vacation Spent">@context.VacationSpent</MudTd>
			<MudTd DataLabel="Vacation Status">@context.Status</MudTd>
			<MudTd>
				<MudButton ButtonType="ButtonType.Button" OnClick="() => DeleteVacationRequest(context.Id)" StartIcon="@Icons.Material.Filled.Delete" Style="color:red;"></MudButton>
			</MudTd>
		</RowTemplate>
		<PagerContent>
			<MudTablePager />
		</PagerContent>
	</MudTable>
}
}